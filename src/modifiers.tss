type ModiferFactory = (prop: string) => Modifier;

const createProvider: ModiferFactory = (itemName: string) => ({
  pos: [-1, -1],
  type: "provider",
  itemName,
  onAction(p: Player) {
    p.items.push({
      id: itemName,
      color: "white",
    });
  },
});

const createPainter: ModiferFactory = (color: string) => ({
  pos: [-1, -1],
  type: "painter",
  color,
  onAction(p: Player) {
    p.items.forEach((item) => (item.color = color));
  },
});

const trash: Modifier = {
  pos: [-1, -1],
  type: "trash",
  onAction(p: Player) {
    p.items = [];
  },
};

const server: Modifier = {
  color: "",
  pos: [-1, -1],
  type: "server",
  goal: [],
  onAction(p: Player) {},
};

const modifs: Record<string, Modifier> = {
  header: createProvider("<Header />"),
  div: createProvider("<Div />"),
  article: createProvider("<Article />"),
  footer: createProvider("<Footer />"),
  redPainter: createPainter("red"),
  bluePainter: createPainter("lightblue"),
  purplePainter: createPainter("purple"),
  orangePainter: createPainter("orange"),
  trash,
  server,
};

export default modifs;
